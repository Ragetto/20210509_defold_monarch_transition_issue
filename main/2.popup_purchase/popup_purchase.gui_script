---========================---
---== LUA MODULE IMPORTS ==---
---========================---
local debugdraw = require("lua-modules.libs-defold.debug-draw.debug-draw")
local defmath = require("lua-modules.libs-defold.defmath.defmath")
local lume = require("lua-modules.libs-external.lume.lume")
local gui_extra = require("lua-modules.libs-defold.gui_extra.gui_extra")
local monarch = require("lua-modules.libs-defold.monarch.monarch")
local transitions = require("lua-modules.libs-defold.monarch.transitions.gui")
local rc = require("lua-modules.libs-defold.rendercam.rendercam")

---========================---
---========================---


function init(self)
	msg.post(".", "acquire_input_focus")
	gui.set_render_order(2)
	print("POPUP_PURCHASE DISPLAYED!")
end

function on_input(self, action_id, action)
	if action_id == hash("touch") and action.pressed then
		if gui.pick_node(gui.get_node("btn_closing_cross"), action.x, action.y) then
			print("POPUP_PURCHASE CLOSED!")
			monarch.back()
		elseif gui.pick_node(gui.get_node("btn_purchase"), action.x, action.y) then
			print("POPUP_NOT_ENOUGH_CASH TRIGGERED!")
			monarch.show("popup_not_enough_cash")
		end
	end
end

function on_message(self, message_id, message, sender)
	self.transition = transitions.create(gui.get_node("popup_main"))
		.show_in(transitions.slide_in_bottom, gui.EASING_OUTQUAD, 0.5, 0)
		.show_out(transitions.slide_out_bottom, gui.EASING_INQUAD, 0.5, 0)
		.back_in(transitions.slide_in_bottom, gui.EASING_OUTQUAD, 0.5, 0)
		.back_out(transitions.slide_out_bottom, gui.EASING_INQUAD, 0.5, 0)
	
	self.transition.handle(message_id, message, sender)	

	if message_id == monarch.TRANSITION.DONE and message.transition == monarch.TRANSITION.SHOW_IN then
		print("POPUP_PURCHASE transition finished!")
	end
end